version: '3.8'
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - sandbox-network

  kafka-1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://kafka-1:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - sandbox-network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 8090:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper-1:2181
    links:
      - kafka-1
      - zookeeper-1
    networks:
      - sandbox-network

  postgres-db:
    image: postgres:15.4
    environment:
      POSTGRES_DB: "test_database"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5431:5432"
    networks:
      - sandbox-network

  transactions-sandbox-consumer:
    image: vsanyc/transactions-sandbox:0.1
    build:
      context: .
      dockerfile: Dockerfile
    ports:            
      - "8081:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/test_database
      - SPRING_LIQUIBASE_CHANGE_LOG=classpath:db/changelog/db-changelog-master.xml
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka-1:29092
      - SPRING_KAFKA_CONNECTION_TYPE=consumer
    networks:
      - sandbox-network
    depends_on:
      - postgres-db
      - kafka-1

  transactions-sandbox-producer:
    image: vsanyc/transactions-sandbox:0.1
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/test_database
      - SPRING_LIQUIBASE_CHANGE_LOG=classpath:db/changelog/db-changelog-master.xml
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka-1:29092
      - SPRING_KAFKA_CONNECTION_TYPE=producer
    networks:
      - sandbox-network
    depends_on:
      - postgres-db
      - kafka-1
      - transactions-sandbox-consumer
networks:
  sandbox-network:
    driver: bridge
